{
  "project_overview": {
    "name": "Predecessor Tournament Management System",
    "description": "A locally hosted web application for managing competitive esports tournaments for the game Predecessor",
    "project_path": "H:\\Project Folder\\Predecessor website",
    "database": "Airtable",
    "authentication": "Discord OAuth",
    "api_integration": "https://omeda.city/news/10"
  },
  
  "required_installations": [
    "Node.js (latest LTS version)",
    "npm or yarn package manager",
    "Git for version control",
    "VS Code or preferred code editor",
    "Chrome/Firefox for testing",
    "Postman for API testing (optional but recommended)"
  ],

  "folder_structure": {
    "H:\\Project Folder\\Predecessor website\\": {
      "frontend/": {
        "src/": {
          "components/": {
            "Tournament/": ["TournamentCreation.js", "TournamentView.js", "BracketDisplay.js"],
            "Draft/": ["DraftRoom.js", "CaptainInterface.js", "SpectatorView.js", "PickBanPhase.js"],
            "Team/": ["TeamSignup.js", "TeamManagement.js", "PlayerInvites.js"],
            "Auth/": ["DiscordLogin.js", "ProtectedRoute.js"],
            "Admin/": ["AdminPanel.js", "AdminControls.js"],
            "Common/": ["Header.js", "Footer.js", "Notifications.js"]
          },
          "pages/": ["Home.js", "Tournaments.js", "Teams.js", "Profile.js", "Admin.js"],
          "services/": ["airtableService.js", "discordService.js", "omedaAPI.js"],
          "utils/": ["constants.js", "helpers.js", "validators.js"],
          "styles/": ["main.css", "tournament.css", "draft.css", "responsive.css"]
        },
        "public/": ["index.html", "favicon.ico", "manifest.json"],
        "package.json": "React dependencies and scripts",
        ".env.example": "Environment variable template",
        ".env": "Actual environment variables (gitignored)"
      },
      "backend/": {
        "routes/": ["tournaments.js", "teams.js", "draft.js", "auth.js", "admin.js"],
        "middleware/": ["auth.js", "validation.js", "rateLimiting.js"],
        "services/": ["airtable.js", "discord.js", "omeda.js"],
        "utils/": ["database.js", "helpers.js", "constants.js"],
        "config/": ["database.js", "discord.js", "server.js"],
        "server.js": "Main server file",
        "package.json": "Node.js dependencies and scripts"
      },
      "launchers/": {
        "start_development.bat": "Start dev environment",
        "start_production.bat": "Start production",
        "install_dependencies.bat": "Install all packages",
        "run_tests.bat": "Execute test suite",
        "backup_database.bat": "Backup Airtable data"
      },
      "documentation/": {
        "README.md": "Project overview and setup",
        "API_DOCUMENTATION.md": "Backend API endpoints",
        "USER_GUIDE.md": "End user instructions",
        "ADMIN_GUIDE.md": "Administrator manual",
        "TROUBLESHOOTING.md": "Common issues and solutions"
      },
      "tests/": {
        "unit/": "Component and function tests",
        "integration/": "API and database tests",
        "e2e/": "End-to-end user journey tests"
      },
      "roadmap/": {
        "phases/": ["phase1_setup.md", "phase2_core.md", "phase3_advanced.md"],
        "current_progress.md": "Real-time progress tracking",
        "backlog.md": "Future features and improvements"
      },
      "config.ini": "Project configuration file",
      ".gitignore": "Git ignore rules",
      "package.json": "Root package file for workspace"
    }
  },

  "airtable_database_structure": {
    "base_name": "Predecessor Tournament Management",
    "personal_token": "patkfSrFw4UnLxZat.cbcbd2f4c9699d98f72e74c6394d76b0a8ef227aee8ecc98473ed0061d4379ab",
    "tables": {
      "Users": {
        "fields": [
          {"name": "UserID", "type": "singleLineText", "primary": true},
          {"name": "DiscordID", "type": "singleLineText"},
          {"name": "DiscordUsername", "type": "singleLineText"},
          {"name": "Email", "type": "email"},
          {"name": "IsAdmin", "type": "checkbox"},
          {"name": "CreatedAt", "type": "dateTime"},
          {"name": "LastActive", "type": "dateTime"},
          {"name": "Teams", "type": "multipleRecordLinks", "linkedTable": "Teams"},
          {"name": "Tournaments", "type": "multipleRecordLinks", "linkedTable": "Tournaments"}
        ],
        "sample_data": [
          {"UserID": "user_001", "DiscordID": "123456789", "DiscordUsername": "ProPlayer1", "Email": "player1@example.com", "IsAdmin": false},
          {"UserID": "admin_001", "DiscordID": "987654321", "DiscordUsername": "TourneyAdmin", "Email": "admin@example.com", "IsAdmin": true}
        ]
      },
      "Tournaments": {
        "fields": [
          {"name": "TournamentID", "type": "singleLineText", "primary": true},
          {"name": "Name", "type": "singleLineText"},
          {"name": "Description", "type": "multilineText"},
          {"name": "BracketType", "type": "singleSelect", "options": ["Single Elimination", "Double Elimination", "Round Robin", "Swiss"]},
          {"name": "GameFormat", "type": "singleSelect", "options": ["Best of 1", "Best of 3", "Best of 5"]},
          {"name": "QuarterFinalFormat", "type": "singleSelect", "options": ["Best of 1", "Best of 3", "Best of 5"]},
          {"name": "SemiFinalFormat", "type": "singleSelect", "options": ["Best of 1", "Best of 3", "Best of 5"]},
          {"name": "GrandFinalFormat", "type": "singleSelect", "options": ["Best of 1", "Best of 3", "Best of 5"]},
          {"name": "MaxTeams", "type": "number"},
          {"name": "RegistrationOpen", "type": "checkbox"},
          {"name": "StartDate", "type": "dateTime"},
          {"name": "EndDate", "type": "dateTime"},
          {"name": "CreatedBy", "type": "multipleRecordLinks", "linkedTable": "Users"},
          {"name": "Status", "type": "singleSelect", "options": ["Planning", "Registration", "In Progress", "Completed", "Cancelled"]},
          {"name": "Teams", "type": "multipleRecordLinks", "linkedTable": "Teams"}
        ],
        "sample_data": [
          {"TournamentID": "tour_001", "Name": "Summer Championship 2025", "BracketType": "Double Elimination", "GameFormat": "Best of 3", "MaxTeams": 16, "Status": "Registration"}
        ]
      },
      "Teams": {
        "fields": [
          {"name": "TeamID", "type": "singleLineText", "primary": true},
          {"name": "TeamName", "type": "singleLineText"},
          {"name": "Captain", "type": "multipleRecordLinks", "linkedTable": "Users"},
          {"name": "Players", "type": "multipleRecordLinks", "linkedTable": "Users"},
          {"name": "Substitutes", "type": "multipleRecordLinks", "linkedTable": "Users"},
          {"name": "Tournament", "type": "multipleRecordLinks", "linkedTable": "Tournaments"},
          {"name": "Confirmed", "type": "checkbox"},
          {"name": "CreatedAt", "type": "dateTime"},
          {"name": "TeamLogo", "type": "url"}
        ],
        "sample_data": [
          {"TeamID": "team_001", "TeamName": "Shadow Wolves", "Confirmed": true},
          {"TeamID": "team_002", "TeamName": "Lightning Strike", "Confirmed": false}
        ]
      },
      "Matches": {
        "fields": [
          {"name": "MatchID", "type": "singleLineText", "primary": true},
          {"name": "Tournament", "type": "multipleRecordLinks", "linkedTable": "Tournaments"},
          {"name": "Team1", "type": "multipleRecordLinks", "linkedTable": "Teams"},
          {"name": "Team2", "type": "multipleRecordLinks", "linkedTable": "Teams"},
          {"name": "ScheduledTime", "type": "dateTime"},
          {"name": "ActualStartTime", "type": "dateTime"},
          {"name": "EndTime", "type": "dateTime"},
          {"name": "Status", "type": "singleSelect", "options": ["Scheduled", "In Progress", "Completed", "Postponed", "Cancelled"]},
          {"name": "Winner", "type": "multipleRecordLinks", "linkedTable": "Teams"},
          {"name": "Score", "type": "singleLineText"},
          {"name": "BracketRound", "type": "singleLineText"},
          {"name": "DraftData", "type": "multipleRecordLinks", "linkedTable": "DraftSessions"}
        ]
      },
      "DraftSessions": {
        "fields": [
          {"name": "DraftID", "type": "singleLineText", "primary": true},
          {"name": "Match", "type": "multipleRecordLinks", "linkedTable": "Matches"},
          {"name": "Team1Captain", "type": "multipleRecordLinks", "linkedTable": "Users"},
          {"name": "Team2Captain", "type": "multipleRecordLinks", "linkedTable": "Users"},
          {"name": "FirstPickTeam", "type": "singleSelect", "options": ["Team1", "Team2"]},
          {"name": "CoinTossWinner", "type": "singleSelect", "options": ["Team1", "Team2"]},
          {"name": "DraftOrder", "type": "multilineText"},
          {"name": "BanCount", "type": "number"},
          {"name": "Team1Picks", "type": "multilineText"},
          {"name": "Team1Bans", "type": "multilineText"},
          {"name": "Team2Picks", "type": "multilineText"},
          {"name": "Team2Bans", "type": "multilineText"},
          {"name": "Status", "type": "singleSelect", "options": ["Waiting", "In Progress", "Completed", "Cancelled"]},
          {"name": "StartTime", "type": "dateTime"},
          {"name": "EndTime", "type": "dateTime"},
          {"name": "SpectatorLink", "type": "url"},
          {"name": "Team1CaptainLink", "type": "url"},
          {"name": "Team2CaptainLink", "type": "url"}
        ]
      },
      "PlayerSignups": {
        "fields": [
          {"name": "SignupID", "type": "singleLineText", "primary": true},
          {"name": "User", "type": "multipleRecordLinks", "linkedTable": "Users"},
          {"name": "Tournament", "type": "multipleRecordLinks", "linkedTable": "Tournaments"},
          {"name": "LookingForTeam", "type": "checkbox"},
          {"name": "PreferredRole", "type": "singleSelect", "options": ["Carry", "Support", "Midlane", "Offlane", "Jungle", "Flex"]},
          {"name": "Experience", "type": "singleSelect", "options": ["Beginner", "Intermediate", "Advanced", "Professional"]},
          {"name": "AvailableTimes", "type": "multilineText"},
          {"name": "ContactInfo", "type": "singleLineText"},
          {"name": "Status", "type": "singleSelect", "options": ["Available", "Invited", "Joined Team"]},
          {"name": "CreatedAt", "type": "dateTime"}
        ]
      },
      "Notifications": {
        "fields": [
          {"name": "NotificationID", "type": "singleLineText", "primary": true},
          {"name": "User", "type": "multipleRecordLinks", "linkedTable": "Users"},
          {"name": "Type", "type": "singleSelect", "options": ["Team Invite", "Tournament Update", "Match Scheduled", "Draft Starting", "General"]},
          {"name": "Title", "type": "singleLineText"},
          {"name": "Message", "type": "multilineText"},
          {"name": "Read", "type": "checkbox"},
          {"name": "CreatedAt", "type": "dateTime"},
          {"name": "RelatedTournament", "type": "multipleRecordLinks", "linkedTable": "Tournaments"},
          {"name": "RelatedTeam", "type": "multipleRecordLinks", "linkedTable": "Teams"}
        ]
      },
      "Heroes": {
        "fields": [
          {"name": "HeroID", "type": "singleLineText", "primary": true},
          {"name": "HeroName", "type": "singleLineText"},
          {"name": "Role", "type": "singleSelect", "options": ["Carry", "Support", "Midlane", "Offlane", "Jungle"]},
          {"name": "ImageURL", "type": "url"},
          {"name": "OmedaID", "type": "singleLineText"},
          {"name": "Enabled", "type": "checkbox"},
          {"name": "LastUpdated", "type": "dateTime"}
        ],
        "sample_data": [
          {"HeroID": "hero_001", "HeroName": "Countess", "Role": "Midlane", "Enabled": true},
          {"HeroID": "hero_002", "HeroName": "Grux", "Role": "Jungle", "Enabled": true}
        ]
      }
    }
  },

  "core_features": {
    "tournament_creation": {
      "requirements": [
        "Admin/user can create tournaments with customizable bracket types",
        "Support for Best of 1, 3, or 5 formats",
        "Different formats for quarter/semi/grand finals",
        "Captain's draft tournament mode",
        "Public tournament viewing for non-logged users"
      ],
      "implementation_steps": [
        "Create TournamentCreation component with form validation",
        "Implement bracket generation algorithms",
        "Add tournament display components for public viewing",
        "Create admin controls for tournament management",
        "Integrate with Airtable for data persistence"
      ]
    },
    "draft_management": {
      "requirements": [
        "Assign team captains with unique access links",
        "Customizable pick/ban order and ban counts (max 5 picks)",
        "Coin toss functionality for first pick determination",
        "Secure captain-only access (Discord integration)",
        "Separate spectator viewing link",
        "Real-time draft updates"
      ],
      "implementation_steps": [
        "Create DraftRoom with WebSocket integration",
        "Implement captain authentication via Discord",
        "Build pick/ban interface with Omeda API integration",
        "Create spectator view with read-only access",
        "Add coin toss functionality",
        "Implement draft state management"
      ]
    },
    "team_management": {
      "requirements": [
        "Team signup and confirmation system",
        "Captain team management (add/remove players)",
        "Maximum 3 substitute players per team",
        "Player invitation system",
        "Individual player signup for team-finding",
        "Notification system for team changes"
      ],
      "implementation_steps": [
        "Create team registration forms",
        "Build captain dashboard for team management",
        "Implement player invitation workflow",
        "Create individual player signup system",
        "Add notification system integration",
        "Build team discovery/matching features"
      ]
    },
    "authentication_system": {
      "requirements": [
        "Discord OAuth integration",
        "User data persistence",
        "Role-based access control",
        "Admin panel access",
        "Secure session management"
      ],
      "implementation_steps": [
        "Set up Discord OAuth application",
        "Implement authentication middleware",
        "Create user session management",
        "Build admin role verification",
        "Add protected route components"
      ]
    }
  },

  "development_phases": {
    "phase_1_foundation": {
      "tasks": [
        "Set up project structure and dependencies",
        "Configure Airtable database and create tables",
        "Implement basic Discord authentication",
        "Create core navigation and layout components",
        "Set up development environment and launchers"
      ],
      "completion_criteria": "User can log in with Discord and basic navigation works"
    },
    "phase_2_core_features": {
      "tasks": [
        "Build tournament creation and viewing system",
        "Implement team registration and management",
        "Create basic admin panel functionality",
        "Add notification system foundation",
        "Integrate Omeda API for hero data"
      ],
      "completion_criteria": "Users can create tournaments, register teams, and view public tournament data"
    },
    "phase_3_draft_system": {
      "tasks": [
        "Implement draft room functionality",
        "Add real-time pick/ban system",
        "Create captain-specific interfaces",
        "Build spectator viewing system",
        "Add coin toss and draft order management"
      ],
      "completion_criteria": "Complete draft system with captain access and spectator viewing"
    },
    "phase_4_advanced_features": {
      "tasks": [
        "Add bracket generation and management",
        "Implement match scheduling system",
        "Create comprehensive notification system",
        "Add player discovery and team matching",
        "Build detailed admin controls"
      ],
      "completion_criteria": "Full tournament lifecycle management with advanced features"
    },
    "phase_5_polish_testing": {
      "tasks": [
        "Comprehensive testing and bug fixes",
        "Performance optimization",
        "Documentation completion",
        "Security audit and improvements",
        "Deployment preparation and backup systems"
      ],
      "completion_criteria": "Production-ready system with full documentation and testing"
    }
  },

  "testing_strategy": {
    "user_journey_tests": [
      {
        "name": "Complete Tournament Flow",
        "steps": [
          "Admin creates new tournament",
          "Teams register for tournament",
          "Captain manages team roster",
          "Brackets are generated",
          "Draft session is conducted",
          "Match results are recorded",
          "Tournament completion"
        ]
      },
      {
        "name": "Draft System Test",
        "steps": [
          "Captain logs in via Discord",
          "Accesses secure draft interface",
          "Performs coin toss",
          "Executes pick/ban phase",
          "Spectators view draft progress",
          "Draft completion and match start"
        ]
      },
      {
        "name": "Team Management Test",
        "steps": [
          "Individual player signup",
          "Team captain creates team",
          "Captain invites players",
          "Players accept/decline invitations",
          "Team confirms tournament registration",
          "Notification system verification"
        ]
      }
    ],
    "security_tests": [
      "Discord authentication bypass attempts",
      "Captain draft link access control",
      "Admin panel access verification",
      "Data validation and sanitization",
      "API rate limiting and security"
    ]
  },

  "troubleshooting_guide": {
    "common_issues": {
      "discord_auth_fails": {
        "symptoms": "Users cannot log in via Discord",
        "solutions": [
          "Verify Discord application credentials in .env",
          "Check Discord OAuth redirect URLs",
          "Ensure Discord bot permissions are correct",
          "Verify server is running on correct port"
        ]
      },
      "airtable_connection_error": {
        "symptoms": "Database operations fail",
        "solutions": [
          "Verify Airtable personal token is valid",
          "Check Airtable base ID and table names",
          "Ensure API rate limits are not exceeded",
          "Verify network connectivity"
        ]
      },
      "draft_access_issues": {
        "symptoms": "Captains cannot access draft interface",
        "solutions": [
          "Verify captain role assignment",
          "Check draft session status",
          "Ensure unique access links are generated",
          "Verify Discord authentication is active"
        ]
      },
      "omeda_api_failures": {
        "symptoms": "Hero images/data not loading",
        "solutions": [
          "Check Omeda API endpoint status",
          "Verify API response format",
          "Implement fallback hero data",
          "Add error handling for API failures"
        ]
      }
    },
    "performance_issues": {
      "slow_page_loads": [
        "Check database query optimization",
        "Implement proper caching strategies",
        "Optimize image loading and compression",
        "Review component rendering performance"
      ],
      "real_time_delays": [
        "Verify WebSocket connection stability",
        "Check server resource usage",
        "Optimize draft state updates",
        "Review network latency issues"
      ]
    }
  },

  "security_considerations": {
    "draft_access_control": {
      "method": "Discord-based authentication with unique session tokens",
      "implementation": "Generate time-limited, captain-specific access tokens",
      "fallback": "Manual admin override for technical issues"
    },
    "data_protection": {
      "user_data": "Minimal Discord data storage (ID, username only)",
      "passwords": "No password storage - Discord OAuth only",
      "sensitive_info": "Environment variables for all API keys"
    },
    "admin_controls": {
      "access_level": "Discord role-based admin verification",
      "audit_logging": "Track all admin actions in Airtable",
      "emergency_access": "Master admin override capabilities"
    }
  },

  "environment_setup": {
    "required_environment_variables": {
      "DISCORD_CLIENT_ID": "Discord application client ID",
      "DISCORD_CLIENT_SECRET": "Discord application client secret", 
      "DISCORD_REDIRECT_URI": "OAuth redirect URL",
      "AIRTABLE_PERSONAL_TOKEN": "patkfSrFw4UnLxZat.cbcbd2f4c9699d98f72e74c6394d76b0a8ef227aee8ecc98473ed0061d4379ab",
      "AIRTABLE_BASE_ID": "Generated after base creation",
      "OMEDA_API_BASE_URL": "https://omeda.city/api",
      "NODE_ENV": "development or production",
      "PORT": "3000 for frontend, 3001 for backend",
      "JWT_SECRET": "Random string for session tokens"
    },
    "development_commands": {
      "install": "npm install (both frontend and backend)",
      "start_dev": "npm run dev (concurrent frontend/backend)",
      "build": "npm run build",
      "test": "npm run test",
      "lint": "npm run lint"
    }
  },

  "ai_assistant_workflow": {
    "phase_approach": "Complete each phase fully before moving to next",
    "testing_requirement": "Test every feature as end user before completion",
    "documentation_requirement": "Document all decisions, changes, and issues encountered",
    "user_feedback_points": [
      "After each phase completion",
      "When encountering technical roadblocks",
      "Before making significant architectural decisions",
      "When 'good enough' state is reached"
    ],
    "quality_gates": [
      "All features in phase must be functional",
      "Security requirements must be met",
      "Basic error handling must be implemented",
      "User experience must be intuitive"
    ]
  },

  "additional_considerations": {
    "mobile_compatibility": "Functionality over mobile optimization (per user preference)",
    "browser_support": "Modern browsers only (Chrome, Firefox, Edge)",
    "offline_functionality": "Not required for initial version",
    "scalability": "Designed for local hosting, not high-volume usage",
    "backup_strategy": "Regular Airtable exports, local file backups",
    "monitoring": "Basic error logging and admin notifications"
  },

  "success_metrics": {
    "functional_requirements": [
      "Users can create and join tournaments",
      "Draft system works with secure captain access",
      "Team management functions properly",
      "Admin controls are comprehensive",
      "Notifications work reliably"
    ],
    "user_experience_goals": [
      "Intuitive navigation and workflow",
      "Fast response times for critical actions",
      "Clear error messages and help text",
      "Consistent visual design",
      "Minimal learning curve for new users"
    ]
  }
}